// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ApolloClient__React_Hooks_UseQuery = require("rescript-apollo-client/src/@apollo/client/react/hooks/ApolloClient__React_Hooks_UseQuery.bs.js");

var Raw = {};

var query = (require("@apollo/client").gql`
  query launchesPast($offset: Int)  {
    launchesPast(limit: 5, offset: $offset)  {
      __typename
      mission_name
      launch_date_local
      launch_site  {
        __typename
        site_name_long
      }
      ships  {
        __typename
        name
        home_port
        image
      }
    }
  }
`);

function parse(value) {
  var value$1 = value.launchesPast;
  return {
          launchesPast: !(value$1 == null) ? value$1.map(function (value) {
                  if (value == null) {
                    return ;
                  }
                  var value$1 = value.mission_name;
                  var value$2 = value.launch_date_local;
                  var value$3 = value.launch_site;
                  var tmp;
                  if (value$3 == null) {
                    tmp = undefined;
                  } else {
                    var value$4 = value$3.site_name_long;
                    tmp = {
                      __typename: value$3.__typename,
                      site_name_long: !(value$4 == null) ? value$4 : undefined
                    };
                  }
                  var value$5 = value.ships;
                  return {
                          __typename: value.__typename,
                          mission_name: !(value$1 == null) ? value$1 : undefined,
                          launch_date_local: !(value$2 == null) ? Caml_option.some(value$2) : undefined,
                          launch_site: tmp,
                          ships: !(value$5 == null) ? value$5.map(function (value) {
                                  if (value == null) {
                                    return ;
                                  }
                                  var value$1 = value.name;
                                  var value$2 = value.home_port;
                                  var value$3 = value.image;
                                  return {
                                          __typename: value.__typename,
                                          name: !(value$1 == null) ? value$1 : undefined,
                                          home_port: !(value$2 == null) ? value$2 : undefined,
                                          image: !(value$3 == null) ? value$3 : undefined
                                        };
                                }) : undefined
                        };
                }) : undefined
        };
}

function serialize(value) {
  var value$1 = value.launchesPast;
  var launchesPast = value$1 !== undefined ? value$1.map(function (value) {
          if (value === undefined) {
            return null;
          }
          var value$1 = value.ships;
          var ships = value$1 !== undefined ? value$1.map(function (value) {
                  if (value === undefined) {
                    return null;
                  }
                  var value$1 = value.image;
                  var image = value$1 !== undefined ? value$1 : null;
                  var value$2 = value.home_port;
                  var home_port = value$2 !== undefined ? value$2 : null;
                  var value$3 = value.name;
                  var name = value$3 !== undefined ? value$3 : null;
                  var value$4 = value.__typename;
                  return {
                          __typename: value$4,
                          name: name,
                          home_port: home_port,
                          image: image
                        };
                }) : null;
          var value$2 = value.launch_site;
          var launch_site;
          if (value$2 !== undefined) {
            var value$3 = value$2.site_name_long;
            var site_name_long = value$3 !== undefined ? value$3 : null;
            var value$4 = value$2.__typename;
            launch_site = {
              __typename: value$4,
              site_name_long: site_name_long
            };
          } else {
            launch_site = null;
          }
          var value$5 = value.launch_date_local;
          var launch_date_local = value$5 !== undefined ? Caml_option.valFromOption(value$5) : null;
          var value$6 = value.mission_name;
          var mission_name = value$6 !== undefined ? value$6 : null;
          var value$7 = value.__typename;
          return {
                  __typename: value$7,
                  mission_name: mission_name,
                  launch_date_local: launch_date_local,
                  launch_site: launch_site,
                  ships: ships
                };
        }) : null;
  return {
          launchesPast: launchesPast
        };
}

function serializeVariables(inp) {
  var a = inp.offset;
  return {
          offset: a !== undefined ? a : undefined
        };
}

function makeVariables(offset, param) {
  return {
          offset: offset
        };
}

function makeDefaultVariables(param) {
  return {
          offset: undefined
        };
}

var LaunchesPastQuery_inner = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

var include = ApolloClient__React_Hooks_UseQuery.Extend({
      query: query,
      Raw: Raw,
      parse: parse,
      serialize: serialize,
      serializeVariables: serializeVariables
    });

var use = include.use;

var LaunchesPastQuery_refetchQueryDescription = include.refetchQueryDescription;

var LaunchesPastQuery_useLazy = include.useLazy;

var LaunchesPastQuery_useLazyWithVariables = include.useLazyWithVariables;

var LaunchesPastQuery = {
  LaunchesPastQuery_inner: LaunchesPastQuery_inner,
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables,
  refetchQueryDescription: LaunchesPastQuery_refetchQueryDescription,
  use: use,
  useLazy: LaunchesPastQuery_useLazy,
  useLazyWithVariables: LaunchesPastQuery_useLazyWithVariables
};

function LaunchesPast(Props) {
  var offset = React.useRef(0);
  var launchesPastQuery = Curry.app(use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        {
          offset: undefined
        }
      ]);
  var onRequestFetchMore = function (param) {
    offset.current = offset.current + 5 | 0;
    Curry._5(launchesPastQuery.fetchMore, undefined, undefined, {
          offset: offset.current
        }, undefined, undefined);
    
  };
  var match = launchesPastQuery.data;
  var tmp;
  var exit = 0;
  if (match !== undefined) {
    var launchesPast = match.launchesPast;
    if (launchesPast !== undefined) {
      tmp = React.createElement("div", undefined, Belt_Array.map(launchesPast, (function (launchPast) {
                  if (launchPast === undefined) {
                    return null;
                  }
                  var missionName = launchPast.mission_name;
                  if (missionName === undefined) {
                    return null;
                  }
                  var ships = launchPast.ships;
                  return React.createElement("div", {
                              key: missionName,
                              style: {
                                marginBottom: "20px"
                              }
                            }, React.createElement("strong", undefined, missionName), React.createElement("div", {
                                  style: {
                                    display: "flex"
                                  }
                                }, ships !== undefined ? Belt_Array.map(ships, (function (ship) {
                                          if (ship === undefined) {
                                            return null;
                                          }
                                          var name = ship.name;
                                          if (name === undefined) {
                                            return null;
                                          }
                                          var image = ship.image;
                                          return React.createElement("div", {
                                                      key: name,
                                                      style: {
                                                        display: "flex",
                                                        flexDirection: "column"
                                                      }
                                                    }, React.createElement("p", undefined, name), image !== undefined ? React.createElement("img", {
                                                            alt: "",
                                                            src: image,
                                                            width: "125"
                                                          }) : null);
                                        })) : null));
                })), React.createElement("button", {
                onClick: onRequestFetchMore
              }, "Fetch more"));
    } else {
      exit = 1;
    }
  } else {
    exit = 1;
  }
  if (exit === 1) {
    var error = launchesPastQuery.error;
    tmp = error !== undefined ? error.message : "Loading ...";
  }
  return React.createElement("div", undefined, tmp);
}

var make = LaunchesPast;

exports.LaunchesPastQuery = LaunchesPastQuery;
exports.make = make;
/* query Not a pure module */
